####################################
## Windows Logstash Configuration ##
##         Input Windows          ##
##        Output RabbitMQ         ##
####################################

input {
  tcp {
    type => "windows"
    port =>
    codec => json
  }

  tcp {
    type => "dhcp"
    port =>
    tags => [ "windows" ]
  }

  tcp {
    type => "dns"
    port =>
    tags => [ "windows" ]
  }
}

filter {
  if "windows" in [tags] {
    if [type] == "dns" {
      if [message] =~ /^\r$/ or [message] =~ /\? = Unknown/
      or [message] =~ /\[ Flags \(hex\)/ or [message] =~ /A = Authoritative Answer/ or [message] =~ /ResponseC`ode \]/
      or [message] =~ /N = Notify/ or [message] =~ /U = Update/ or [message] =~ /Question Name/ or [message] =~ /R = Recursion Available/
      or [message] =~ /D = Recursion Desired/ or [message] =~ /Question Type/ or [message] =~ /T = Truncated Response/
      or [message] =~ /Date/ or [message] =~ /UDP\/TCP indicator/ or [message] =~ /Send\/Receive indicator/
      or [message] =~ /Remote IP/ or [message] =~ /R = Response/ or [message] =~ /Q = Standard Query/
      or [message] =~ /Context/ or [message] =~ /blank = Query/ or [message] =~ /Thread ID/
      or [message] =~ /Internal packet identifier/ or [message] =~ /Xid \(hex\)/ or [message] =~ /Time/
      or [message] =~ /Field #/ or [message] =~ /Message logging key/ or [message] =~ /Log file wrap/
      or [message] =~ /DNS Server log file/ or [message] =~ /-------/ {
        drop {}
      }
    }
  }
}

output {
  if "windows" in [tags] {
    rabbitmq {
      exchange => "windows"
      exchange_type => "direct"
      host => "x.x.x.x"
      port =>
      durable => true
      persistent => true
      ssl => true
      user => ""
      password => ""
    }
  }
}
