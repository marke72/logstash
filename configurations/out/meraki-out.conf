###################################
## Meraki Logstash Configuration ##
##        Input RabbitMQ         ##
##            Filter             ##
##     Output Elasticsearch      ##
###################################

input {
  rabbitmq {
    queue => "meraki-queue"
    exchange => "meraki"
    host => ""
    durable => true
    port =>
    ssl => true
    verify_ssl => true
    prefetch_count => 2048
    threads => 4
    user => ""
    password => ""
  }
}

filter {
  if "meraki" in [tags] {
    if [type] == "flows" {
      grok {
        match => { "message" => "%{FLOWS}" }
      }
    }

    if [type] == "urls" {
      grok {
        match => { "message" => "%{URLS}" }
      }
    }

    if [type] == "appliance_events" {
      grok {
        match => { "message" => "%{APPLIANCE_EVENTS}" }
      }
    }

    if [type] == "ids" {
      grok {
        match => { "message" => "%{IDS}" }
      }
    }

    # Changes to the document
    if [dst_ip] !~ /^10\.(?:[0-9]{1,3}\.){2}[0-9]{1,3}$/ and [dst_ip] !~ /^172\.16\.[0-9]{1,3}\.[0-9]{1,3}$/ and [dst_ip] !~ /^192\.168\.[0-9]{1,3}\.[0-9]{1,3}$/ {
      if !("_grokparsefailure" in [tags]) {
        # Add dshield field based on dst_ip
        mutate {
          add_field => { "dshield_dst" => "http://dshield.org/ipinfo.html?ip=%{dst_ip}" }
        }

        # Set geoip for dst_ip
        geoip {
          source => "dst_ip"
          target => "dst_geoip"
        }
      }
    }

    if [src_ip] !~ /^10\.(?:[0-9]{1,3}\.){2}[0-9]{1,3}$/ and [src_ip] !~ /^172\.16\.[0-9]{1,3}\.[0-9]{1,3}$/ and [src_ip] !~ /^192\.168\.[0-9]{1,3}\.[0-9]{1,3}$/ {
      if !("_grokparsefailure" not in [tags]) {
        # Add dshield field based on src_ip
        mutate {
          add_field => { "dshield_src" => "http://dshield.org/ipinfo.html?ip=%{src_ip}" }
        }

        # Set geoip for src_ip
        geoip {
          source => "src_ip"
          target => "src_geoip"
        }
      }
    }

    mutate {
      # Remove any spaces trailing the value
      strip => ["timestamp"]

      # Add field time_received with vale of @timestamp
      add_field => { "time_received" => "%{@timestamp}" }
    }

    if [timestamp] != 0 {
      # Set timestamp field as @timestamp and remove it
      date {
        match => [ "timestamp", "UNIX" ]
        remove_field => ["timestamp" ]
      }
    }
  }
}

output {
  if "meraki" in [tags] {
    elasticsearch {
      ssl => true
      user => ""
      password => ""
      hosts => [""]
      index => "meraki-%{+YYYY.MM.dd}"
      manage_template => false
    }
  }
}
