input {
        rabbitmq {
                queue => "windows-queue"
                exchange => "windows"
                host => "x.x.x.x"
        }
}

filter {
    if [type] == "windows" {
		# Change field @timestamp to same time as field EventTime
		date {
			match => [ "EventTime", "YYYY-MM-dd HH:mm:ss" ]
		}

		# Mutate field Direction to correct values
		if [Direction] == "%%14592" {
			mutate {
				replace => { "Direction" => "Inbound" }
			}
		}
		else if [Direction] == "%%14593" {
			mutate {
				replace => { "Direction" => "Outbound" }
			}
		}

		# Mutate field LayerName to correct values
		if [LayerName] == "%%14608" {
			mutate {
				replace => { "LayerName" => "Resource Assignment" }
			}
		}
		else if [LayerName] == "%%14610" {
			mutate {
				replace => { "LayerName" => "Receive/Accept" }
			}
		}
		else if [LayerName] == "%%14611" {
			mutate {
				replace => { "LayerName" => "Connect" }
			}
		}

		# Mutate field TargetUserName to remove @wada
		mutate {
			split => { "TargetUserName" => "@" }
			remove_field => [ "[TargetUserName][1]" ]
		}

		# Mutate field Hostname to remove .wada
		mutate {
			split => { "Hostname" => "." }
			remove_field => [ "[Hostname][1]" ]
		}

		# Mutate field TargetUserName to changes spaces to _
		if [TargetUserName] == "ANONYMOUS LOGON" {
			mutate {
				replace => { "TargetUserName" => "anonymous_logon" }
			}
		}

		# Mutate field SourceName to change spaces to -
		if [SourceName] == "Citrix WMI Service" {
			mutate {
				replace => { "SourceName" => "Citrix-WMI-Service" }
			}
		}
		else if [SourceName] == "Service Control Manager" {
			mutate {
				replace => { "SourceName" => "Service-Control-Manager" }
			}
		}
		else if [SourceName] == "Desktop Window Manager" {
			mutate {
				replace => { "SourceName" => "Desktop-Window-Manager" }
			}
		}
		else if [SourceName] == "VMware Tools" {
			mutate {
				replace => { "SourceName" => "VMware-Tools" }
			}
		}
		else if [SourceName] == "MSSQL$MANAGEMENT" {
			mutate {
				replace => { "SourceName" => "MSSQL-MANAGEMENT" }
			}
		}
		else if [SourceName] == "MSExchange ADAccess" {
			mutate {
				replace => { "SourceName" => "MSExchangeADAccess" }
			}
		}
		else if [SourceName] == "Kronos HR Payroll" {
			mutate {
				replace => { "SourceName" => "Kronos-HR-Payroll" }
			}
		}
		else if [SourceName] == "MSExchange Messaging Policies" {
			mutate {
				replace => { "SourceName" => "MSExchange-Messaging-Policies" }
			}
		}
		else if [SourceName] == "LogMeIn Guardian" {
			mutate {
				replace => { "SourceName" => "LogMeIn-Guardian" }
			}
		}
		else if [SourceName] == "SQL Server Reporting Services (MSSQLSERVER)" {
			mutate {
				replace => { "SourceName" => "SQL-Server-Reporting-Services-(MSSQLSERVER)" }
			}
		}
		else if [SourceName] == "Windows Error Reporting" {
			mutate {
				replace => { "SourceName" => "Windows-Error-Reporting" }
			}
		}
		else if [SourceName] == "MSExchange OWA" {
			mutate {
				replace => { "SourceName" => "MSExchange-OWA" }
			}
		}
		else if [SourceName] == "MSSQL$SHAREPOINT" {
			mutate {
				replace => { "SourceName" => "MSSQL-SHAREPOINT" }
			}
		}
		else if [SourceName] == "MSSQL$CITRIX_METAFRAME" {
			mutate {
				replace => { "SourceName" => "MSSQL-CITRIX_METAFRAME" }
			}
		}
		else if [SourceName] == "GFI LanGuard" {
			mutate {
				replace => { "SourceName" => "GFI-LanGuard" }
			}
		}
		else if [SourceName] == "Microsoft-SharePoint Products-SharePoint Foundation" {
			mutate {
				replace => { "SourceName" => "Microsoft-SharePoint-Products-SharePoint-Foundation" }
			}
		}

		# Mutate field Category to change spaces to _	
		if [Category] == "Filtering Platform Connection" {
			mutate {
				replace => { "Category" => "filtering_platform_connection" }
			}
		}
		else if [Category] == "Other Object Access Events" {
			mutate {
				replace => { "Category" => "other_object_access_events" }
			}
		}
		else if [Category] == "File System" {
			mutate {
				replace => { "Category" => "file_system" }
			}
		}
		else if [Category] == "Directory Service Access" {
			mutate {
				replace => { "Category" => "directory_service_access" }
			}
		}
		else if [Category] == "Directory Service Replication" {
			mutate {
				replace => { "Category" => "directory_service_replication" }
			}
		}
		else if [Category] == "Kerberos Authentication Service" {
			mutate {
				replace => { "Category" => "kerberos_authentication_service" }
			}
		}
		else if [Category] == "Kerberos Service Ticket Operations" {
			mutate {
				replace => { "Category" => "kerberos_service_ticket_operations" }
			}
		}
		else if [Category] == "Detailed File Share" {
			mutate {
				replace => { "Category" => "detailed_file_share" }
			}
		}
		else if [Category] == "Special Logon" {
			mutate {
				replace => { "Category" => "special_logon" }
			}
		}
		else if [Category] == "Credential Validation" {
			mutate {
				replace => { "Category" => "credential_validation" }
			}
		}
		else if [Category] == "Guest Library API" {
			mutate {
				replace => { "Category" => "guest_library_api" }
			}
		}
		else if [Category] == "Other Policy Change Events" {
			mutate {
				replace => { "Category" => "other_policy_change_events" }
			}
		}
		else if [Category] == "File Share" {
			mutate {
				replace => { "Category" => "file_share" }
			}
		}

		# Add field EventLookup to SourcName Microsoft-Windows-Security-Auditing allow easy lookup to what the EventID is
		if [SourceName] == "Microsoft-Windows-Security-Auditing" {
			mutate {	
				add_field => {
					"EventLookup" => "https://www.ultimatewindowssecurity.com/securitylog/encyclopedia/event.aspx?eventid=%{EventID}"
				}
			}
		}

		# Remove unwanted fields
		mutate {
			remove_field => [ "EventReceivedTime" ]
			remove_field => [ "EventTime" ]
			remove_field => [ "FilterRTID" ]
			remove_field => [ "Keywords" ]
			remove_field => [ "LaterRTID" ]
			remove_field => [ "Opcode" ]
			remove_field => [ "OpcodeValue" ]
			remove_field => [ "ProcessID" ]
			remove_field => [ "ProviderGUID" ]
			remove_field => [ "RecordNumber" ]
			remove_field => [ "RemoteMachineID" ]
			remove_field => [ "RemoteUserID" ]
			remove_field => [ "SeverityValue" ]
			remove_field => [ "SourceModuleName" ]
			remove_field => [ "SourceModuleType" ]
			remove_field => [ "Task" ]
			remove_field => [ "ThreadID" ]
			remove_field => [ "Version" ]
			remove_field => [ "port" ]
		}

		# PureMessage Filter
		if [SourceName] == "PureMessage" {
			grok {
				match => { "Message" => "%{PUREMESSAGE}" }
				match => { "Message" => "%{GREEDYDATA}" }
			}
		}
	}
}
output {
    if [type] == "windows" {
		elasticsearch {
			hosts => ["x.x.x.x"]
	        	index => "windows-%{+YYYY.MM.dd}"
			manage_template => false
        	}
		if [Severity] == "CRITICAL" {
			email {
				address => "smtp.mailserver.com"
				port => 
				to => "email@mailserver.com, anotheremail@mailserver.com"
				subject => "Critical Event on %{Hostname}"
				body => "%{@timestamp} %{Message}"
			}
		}
   }
}
